lane :test do
puts "fastlane working"
end

platform :ios do
  lane :build do
    
    # Create app in the iOS dev center
    produce(
      app_name: 'Margin Calculator',
      language: 'English',
      app_version: '1.0',
      sku: 'Margin_calc_001',
      
      skip_itc: true # this will only create the app in the iOS dev center
    )
    
    # Create distribution cert
    cert
    
    # Create/fetch provisioning profile
    profile_uuid = get_provisioning_profile( adhoc: true,
                                             readonly: true,
                                             provisioning_name:ENV['SIGH_PROVISIONING_PROFILE_NAME'],
                                             username:ENV['FASTLANE_USER']
                                           )
    UI.success "Successfully built uuid: #{profile_uuid}"

    
    # Delete iOS platform
      FileUtils.rm_rf('../platforms/ios')
    
    # Add iOS platform
    sh "(cd .. && ionic platform add ios)"
    
    # Creating build.json folder to be used for release signing
    # This will get placed in our platforms/ios directory
    build_json = {
      "ios": {
        "release": {
          "codeSignIdentity": "iPhone Distribution",
          "provisioningProfile": "#{profile_uuid}",
          "packageType": "ad-hoc",
          "developmentTeam": ENV["FASTLANE_TEAM_ID"]
        }
      }
    }

    # Writing build.json to platforms/ios directory
    out_file = File.new("../platforms/ios/build.json", "w")
    out_file.puts(JSON.generate(build_json))
    out_file.close
    
    # Build iOS release IPA
    sh "(cd .. && ionic build ios --device --prod --release --buildConfig=./platforms/ios/build.json)"
    

    gym(scheme: "MARGINO",
      clean: true,
      export_method: "ad-hoc",
      export_team_id: ENV["FASTLANE_TEAM_ID"],
      include_bitcode: true,
      include_symbols: false,
      configuration: "Release",
      export_xcargs: "-allowProvisioningUpdates",
      codesigning_identity: "iPhone Distribution",
      #skip_profile_detection: true,
      output_directory:"~/Library/Developer/Xcode/Archives/",
      buildlog_path:"~/Library/Logs/fastlane/xcbuild",
      output_name:"MARGINO.ipa",
      #skip_build_archive: true,
      export_options: {
      method: "ad-hoc",
      signingStyle: "automatic",
      teamID: ENV["FASTLANE_TEAM_ID"],
      manifest: {
          appURL: "https://server.local/apps/MARGINO.ipa",
          displayImageURL: "https://server.local/TestApp.png",
          fullSizeImageURL: "https://server.local/TestApp.png"
      },
      thinning: "<thin-for-all-variants>",
      provisioningProfiles: {
        ENV['SIGH_APP_IDENTIFIER'] => ENV['SIGH_PROVISIONING_PROFILE_NAME']
      },
      signingCertificate: "iPhone Distribution"
      }
    )

    # Get IPA path
    #ipa_path = Dir.glob(File.join(Dir.pwd, "../platforms/ios/build/device/*.ipa")).first
    ipa_path = Dir.glob('/Users/altius-mac/Library/Developer/Xcode/Archives/Apps/MARGINO.ipa').first
    UI.success "IPA PATH: #{ipa_path}"
    ipa_path = File.absolute_path ipa_path
    UI.success "Successfully built IPA: #{ipa_path}"
   
    #deliver

   #deliver(
    #submit_for_review: false,
    #ipa: ipa_path
   #)
  #   pilot(
  #  username: ENV["FASTLANE_USER"],
  #  wait_processing_interval: 30,
  #  distribute_external: false,
  #  skip_submission: true, #allows build script to end before processing the binary        
  #  ipa: ipa_path #path of the ipa generated by your build script
  #)

    # hockey distribution
     hockey(
       api_token: "01610e60aab4493aaae5a5600e7b0e8c",
       #upload_dsym_only: false,
       #create_update: true,
       #public_identifier: "com.ionicframework.margincalculator917148",
       #bundle_short_version: "0.0.1",
       #bundle_version: "0.0.1",
       ipa: "#{ipa_path}",
       #notify: "1",
       #status: "2",
       #notes_type: "0",
       mandatory: "1",
       notes: "Initial Release"
     )
  end

#lane :beta do
 #sync_code_signing(type: "appstore")    # see code signing guide for more information
 #build_app(scheme: "fastlanetest")
 #upload_to_testflight
#end
end